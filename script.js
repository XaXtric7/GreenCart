let text = document.getElementById('text');
let leaf = document.getElementById('leaf');
let hill1 = document.getElementById('hill1');
let hill4 = document.getElementById('hill4');
let hill5 = document.getElementById('hill5');

window.addEventListener('scroll', () => {
    let value = window.scrollY;

    text.style.marginTop = value * 3 + 'px';
    leaf.style.top = value * -2 + 'px';
    leaf.style.left = value * 1.5 + 'px';
    hill5.style.left = value * -1 + 'px';
    hill4.style.left = value * -1.5 + 'px';
    hill1.style.top = value * 1 + 'px';
})


const energySources = [
    { name: 'Solar', price: 0.10, unit: 'kWh', icon: 'sun', color: '#fef08a', iconColor: '#facc15', description: 'Clean, renewable energy harnessed directly from the sun.' },
    { name: 'Wind', price: 0.08, unit: 'kWh', icon: 'wind', color: '#dbeafe', iconColor: '#3b82f6', description: 'Sustainable power generated by wind turbines.' },
    { name: 'Hydro', price: 0.12, unit: 'kWh', icon: 'droplet', color: '#cffafe', iconColor: '#06b6d4', description: 'Renewable energy produced from flowing water.' },
    { name: 'Geothermal', price: 0.15, unit: 'kWh', icon: 'flame', color: '#fee2e2', iconColor: '#ef4444', description: 'Heat energy extracted from beneath the Earth\'s surface.' },
    { name: 'Biomass', price: 0.11, unit: 'kWh', icon: 'tree', color: '#dcfce7', iconColor: '#22c55e', description: 'Energy derived from organic matter and plant-based materials.' },
    { name: 'Tidal', price: 0.18, unit: 'kWh', icon: 'wave', color: '#e0e7ff', iconColor: '#6366f1', description: 'Power generated from the natural rise and fall of ocean tides.' }
];

const cardContainer = document.getElementById('cardContainer');
const arrowLeft = document.getElementById('arrowLeft');
const arrowRight = document.getElementById('arrowRight');

function createCard(source) {
    const card = document.createElement('div');
    card.className = 'card';
    card.innerHTML = `
        <div class="card-content">
            <div class="icon" style="background-color: ${source.color};">
                ${getIcon(source.icon, source.iconColor)}
            </div>
            <h2>${source.name}</h2>
            <div class="price">
                $${source.price.toFixed(2)}<span class="unit">/${source.unit}</span>
            </div>
            <p class="description">${source.description}</p>
            <div class="learn-more">
                Learn more
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="5" y1="12" x2="19" y2="12"></line>
                    <polyline points="12 5 19 12 12 19"></polyline>
                </svg>
            </div>
        </div>
    `;
    return card;
}

function getIcon(name, color) {
    const icons = {
        sun: '<circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>',
        wind: '<path d="M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"></path>',
        droplet: '<path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"></path>',
        flame: '<path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path>',
        tree: '<path d="M17 20h5v-2a3 3 0 0 0-5.356-1.857M14 20h-4m-2 0H3v-2a3 3 0 0 1 5.356-1.857M15 7a3 3 0 0 1-6 0 3 3 0 0 1 6 0Z"></path><path d="M21 15v2a3 3 0 0 1-6 0v-2a3 3 0 0 1 6 0ZM9 15v2a3 3 0 0 1-6 0v-2a3 3 0 0 1 6 0Z"></path>',
        wave: '<path d="M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"></path><path d="M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"></path><path d="M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1"></path>'
    };
    return `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="${color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">${icons[name]}</svg>`;
}

energySources.forEach(source => {
    cardContainer.appendChild(createCard(source));
});

function scrollCards(direction) {
    const scrollAmount = cardContainer.offsetWidth;
    cardContainer.scrollBy({
        left: direction * scrollAmount,
        behavior: 'smooth'
    });
}

arrowLeft.addEventListener('click', () => scrollCards(-1));
arrowRight.addEventListener('click', () => scrollCards(1));

cardContainer.addEventListener('wheel', (e) => {
    e.preventDefault();
    cardContainer.scrollLeft += e.deltaY;
});